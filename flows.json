[
    {
        "id": "8e42a2bf.e54b8",
        "type": "tab",
        "label": "Visualize",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3658f92f65d797b7",
        "type": "tab",
        "label": "Table",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e1d661b05780e560",
        "type": "tab",
        "label": "Query",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "251e28d43075d4af",
        "type": "tab",
        "label": "MQTT data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28ebc073.75bf28",
        "type": "tab",
        "label": "Cameras",
        "disabled": false,
        "info": ""
    },
    {
        "id": "136ec2e31eae94eb",
        "type": "tab",
        "label": "Image capture",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "613bd474aa619f30",
        "type": "tab",
        "label": "Work In Progress",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b12a9cc543227135",
        "type": "mongodb",
        "hostname": "mongodb",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "objectpath",
        "name": ""
    },
    {
        "id": "a36251364e32fe2d",
        "type": "ui_group",
        "name": "Query",
        "tab": "765edfe7b77b99a3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "765edfe7b77b99a3",
        "type": "ui_tab",
        "name": "Query",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cf358000.c6341",
        "type": "ui_group",
        "name": "View",
        "tab": "765edfe7b77b99a3",
        "order": 2,
        "disp": false,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "72dd22b22fef4056",
        "type": "ui_group",
        "name": "List",
        "tab": "765edfe7b77b99a3",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "481e5d94a9b5ab07",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Object Path Analyzer",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY-MM-DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f1981c9fed6058c8",
        "type": "ui_tab",
        "name": "Cameras",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8ac77bf8599762bf",
        "type": "ui_group",
        "name": "Add Camera",
        "tab": "f1981c9fed6058c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "21eb74a18b2872fc",
        "type": "ui_group",
        "name": "Cameras",
        "tab": "f1981c9fed6058c8",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "260e45057b94b302",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "mqtt.juhlin.me",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0c3b4ea904d339eb",
        "type": "axis-preset",
        "name": "Cameras",
        "address": "",
        "protocol": "http"
    },
    {
        "id": "a3dcbe908f0c8cb1",
        "type": "ui_tab",
        "name": "Merge",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "55506a558b776284",
        "type": "ui_group",
        "name": "Viewer",
        "tab": "a3dcbe908f0c8cb1",
        "order": 2,
        "disp": false,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe0c44dbc0f0af9e",
        "type": "ui_group",
        "name": "Data",
        "tab": "a3dcbe908f0c8cb1",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7196b95779c09a2f",
        "type": "ui_group",
        "name": "Merger",
        "tab": "a3dcbe908f0c8cb1",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3d9db3167cf7416",
        "type": "ui_group",
        "name": "Filter",
        "tab": "765edfe7b77b99a3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "daa2daa3.3b2fb8",
        "type": "ui_template",
        "z": "8e42a2bf.e54b8",
        "group": "cf358000.c6341",
        "name": "Visualize",
        "order": 2,
        "width": "13",
        "height": "13",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:640px; height:360px\">\n    <div id=\"{{'frame_'+$id}}\" style=\"width:100%; height:100%; position:relative\">\n        <img id=\"{{'image_'+$id}}\" class=\"card-img-top\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n        <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n    </div>\n</div>\n\n<script>\nvar ctx = null;\nvar imageWidth = 640;\nvar imageHeight = 360;\nvar transperancy = 1.0;\nvar objectpaths = [];\n\nvar selectionArea = null;\nvar areaName = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectionArea )\n        selectionArea.setOptions({ hide: true });\n    selectionArea = null;        \n}\n\nfunction drawPaths( paths ) {\n    if(!ctx)\n        return;\n    ClearCanvas();\n\tif( paths.length > 5 )\n    \tctx.globalAlpha = transperancy;\n    else\n        ctx.globalAlpha = 1.0;\n        \n    paths.forEach(function(object){\n        var first = object.path[0];\n        var last = object.path[object.path.length-1];\n\n    \tctx.beginPath();\n    \tctx.lineWidth = 3;\n    \tctx.strokeStyle = '#00FF00';\n    \tctx.moveTo(first.x, first.y );\n    \tctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n    \tctx.stroke();\t\n\n    \tctx.beginPath();\n    \tctx.strokeStyle = '#FFFF00';\n    \tctx.moveTo(object.path[0].x, object.path[0].y );\n    \tfor( var i = 1; i < object.path.length; i++ )\n    \t\tctx.lineTo(object.path[i].x,object.path[i].y );\n    \tctx.lineTo(last.x,last.y );\n    \tctx.stroke();\t\n    \n    \tctx.beginPath();\n    \tctx.lineWidth = 3;\n    \tctx.strokeStyle = '#FF0000';\n    \tctx.moveTo(last.x, last.y );\n    \tctx.arc(last.x, last.y, 3, 0, 2 * Math.PI);\n    \tctx.stroke();\t\n    });\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic ||  typeof msg.topic === undefined || !msg.payload )\n            return;\n        console.log(msg.topic);\n\n\n        if( msg.topic === \"transperancy\" ) {\n            transperancy = parseFloat(msg.payload) / 100.0;\n            drawPaths( objectpaths );\n        }\n\n        if( msg.topic === \"camera\") {\n            ClearCanvas();\n\n            imageWidth = 640;\n            imageHeight = 360;\n            \n            if( msg.payload.image.aspect === \"1:1\") {\n                imageWidth = 640;\n                imageHeight = 640;\n            }\n\n            if( msg.payload.image.aspect === \"4:3\") {\n                imageWidth = 640;\n                imageHeight = 480;\n            }\n\n            if( msg.payload.image.rotation === 90 || msg.payload.image.rotation === 270 ) {\n                var temp  = imageWidth;\n                imageWidth = imageHeight;\n                imageHeight = temp;\n            }\n\n\n            $(\"#view_\" + scope.$id).css(\"width\",imageWidth + \"px\");\n            $(\"#view_\" + scope.$id).css(\"height\",imageHeight + \"px\");\n            \n            if( msg.payload.image.jpeg)\n                $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ' + msg.payload.image.jpeg);\n            else\n                $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ');\n            \n            if(!ctx) {\n                canvas = document.getElementById(\"canvas_\"+scope.$id);\n                ctx = canvas.getContext(\"2d\");\n            }\n            return;\n        }\n\n        if( msg.topic === \"image\") {\n            if( msg.payload.base64)\n                $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ' + msg.payload.base64);\n            return;\n        }\n\n\n        if( msg.topic === \"objectpaths\" ) {\n\n            objectpaths = msg.payload;\n            drawPaths( objectpaths );\n\t\t\treturn;\n        }\n\n        if( msg.topic === \"resetCamera\" ) {\n            ClearCanvas();\n            $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ');\n        }\n\n        if( msg.topic === \"reset\" ) {\n            ClearCanvas();\n            return;\n        }\n\n\t\tif( msg.topic === \"birth\" || msg.topic === \"death\" ) {\n\t\t    areaName = msg.topic;\n\t\t    if(!selectionArea) {\n    \t\t\tselectionArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n    \t\t\t\tx1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n    \t\t\t\tx2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n    \t\t\t\ty1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n    \t\t\t\ty2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n    \t\t\t\tshow: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n    \t\t\t\tonSelectEnd: function( image, area ) {\n    \t\t\t\t    var area = {\n                            x1: parseInt((area.x1/imageWidth) * 1000),\n                            x2: parseInt((area.x2/imageWidth) * 1000),\n                            y1: parseInt((area.y1/imageHeight) * 1000),\n                            y2: parseInt((area.y2/imageHeight) * 1000)\n    \t\t\t\t    }\n    \t\t\t\t\tscope.send({\n    \t\t\t\t\t\ttopic: areaName,\n    \t\t\t\t\t\tpayload: area\n    \t\t\t\t\t});\n    \t\t\t\t}\n    \t\t\t});\n\t\t    }\n\t\t    selectionArea.setSelection(\n\t\t        parseInt(msg.payload.x1 / 1000 * imageWidth),\n    \t\t\tparseInt(msg.payload.y1 / 1000 * imageHeight),\n\t\t\t\tparseInt(msg.payload.x2 / 1000 * imageWidth),\n    \t\t\tparseInt(msg.payload.y2 / 1000 * imageHeight)\n\t\t    );\n            selectionArea.setOptions({ show: true });\n\t\t}\n    });\n})(scope);\n</script>        \n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "42717058f237d0dd"
            ]
        ]
    },
    {
        "id": "5557b9375b57ee18",
        "type": "ui_slider",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "label": "Heapmap strength",
        "tooltip": "",
        "group": "cf358000.c6341",
        "order": 1,
        "width": "10",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "transperancy",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "25ce79e8a8d5b1d6"
            ]
        ]
    },
    {
        "id": "2f0a52838255cc47",
        "type": "delay",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 590,
        "y": 560,
        "wires": [
            [
                "135f10d132a1ada9"
            ]
        ]
    },
    {
        "id": "135f10d132a1ada9",
        "type": "link out",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "mode": "link",
        "links": [],
        "x": 735,
        "y": 560,
        "wires": []
    },
    {
        "id": "7f05e69e25483333",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Visulize",
        "info": "",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "484c227410fafc31",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "Visualize",
        "links": [
            "0c56474b6222ab1b",
            "d5e5d4deb367ce9a",
            "fafa213522f3598a",
            "854c158e73c41b71",
            "cea402449fccc72f"
        ],
        "x": 265,
        "y": 120,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "570704ac76cf97e0",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "links": [
            "8d67fcc0883d7597",
            "7c8beca0.5c0cdc",
            "72534bcb5e75607f"
        ],
        "x": 265,
        "y": 160,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "c80ee327f6ef1fad",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Paths",
        "info": "",
        "x": 150,
        "y": 160,
        "wires": []
    },
    {
        "id": "f1685b5b0e483973",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "Reset filters",
        "links": [
            "15eeae9f8e7c78cc",
            "3bd482b9089e81c3",
            "55d097613a5ba17d",
            "3f44c8a1ac857f89"
        ],
        "x": 265,
        "y": 360,
        "wires": [
            [
                "743c2f07d2992fbb"
            ]
        ]
    },
    {
        "id": "5243125f10d45989",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Reset filters",
        "info": "",
        "x": 170,
        "y": 360,
        "wires": []
    },
    {
        "id": "743c2f07d2992fbb",
        "type": "change",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "paths",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "birth",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "death",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 360,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "25ce79e8a8d5b1d6",
        "type": "change",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "transperancy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "2f0a52838255cc47",
                "73ceda1a4bf104c4"
            ]
        ]
    },
    {
        "id": "7fc58d7f5e5bdd48",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "links": [
            "73ceda1a4bf104c4"
        ],
        "x": 265,
        "y": 200,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "87f3ceeae6c202f5",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Transperancy",
        "info": "",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "73ceda1a4bf104c4",
        "type": "link out",
        "z": "8e42a2bf.e54b8",
        "name": "Transperancy",
        "mode": "link",
        "links": [
            "7fc58d7f5e5bdd48"
        ],
        "x": 535,
        "y": 520,
        "wires": []
    },
    {
        "id": "90f16a024c17549d",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Transperancy",
        "info": "",
        "x": 630,
        "y": 520,
        "wires": []
    },
    {
        "id": "597076107473225f",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "links": [
            "f176d46fa40bd346"
        ],
        "x": 265,
        "y": 240,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "9d28b370db31b5ba",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "image",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "5daf2b19c0a38957",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Refresh",
        "info": "",
        "x": 810,
        "y": 560,
        "wires": []
    },
    {
        "id": "e2f9250793b5244e",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "Reset camera",
        "links": [
            "15eeae9f8e7c78cc",
            "55d097613a5ba17d",
            "3f44c8a1ac857f89"
        ],
        "x": 265,
        "y": 320,
        "wires": [
            [
                "4956368b157301e3"
            ]
        ]
    },
    {
        "id": "4956368b157301e3",
        "type": "change",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resetCamera",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "f30e396f18c941e4",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Reset camera",
        "info": "",
        "x": 170,
        "y": 320,
        "wires": []
    },
    {
        "id": "7f11d7b47e01f853",
        "type": "link in",
        "z": "8e42a2bf.e54b8",
        "name": "",
        "links": [
            "cf47677bc668681e",
            "50d979c98c3f3937"
        ],
        "x": 265,
        "y": 280,
        "wires": [
            [
                "daa2daa3.3b2fb8"
            ]
        ]
    },
    {
        "id": "5ff1e097145d1a67",
        "type": "comment",
        "z": "8e42a2bf.e54b8",
        "name": "Birth/Death",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "42717058f237d0dd",
        "type": "link out",
        "z": "8e42a2bf.e54b8",
        "name": "Birth Death Filter",
        "mode": "link",
        "links": [
            "c6e742080220ed8e",
            "3bbc904ee4ca3eb2"
        ],
        "x": 745,
        "y": 120,
        "wires": []
    },
    {
        "id": "abfe81e068d09a16",
        "type": "link out",
        "z": "3658f92f65d797b7",
        "name": "",
        "links": [
            "fb839fad.d21a9",
            "570704ac76cf97e0"
        ],
        "x": 1175,
        "y": 100,
        "wires": []
    },
    {
        "id": "0c6467ad366d2ecd",
        "type": "ui_table",
        "z": "3658f92f65d797b7",
        "group": "72dd22b22fef4056",
        "name": "",
        "order": 0,
        "width": "12",
        "height": "13",
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "distance",
                "title": "Distance (%)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "age",
                "title": "Age (s)",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "speed",
                "title": "Speed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 470,
        "y": 100,
        "wires": [
            [
                "44f2f0f64df1d55a",
                "612d445635fd947b",
                "bb8a987d112f3d8a"
            ]
        ]
    },
    {
        "id": "5579e37eb7dfda73",
        "type": "change",
        "z": "3658f92f65d797b7",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "0c6467ad366d2ecd"
            ]
        ]
    },
    {
        "id": "44f2f0f64df1d55a",
        "type": "function",
        "z": "3658f92f65d797b7",
        "name": "Find",
        "func": "msg.device = msg.payload.device;\nmsg.payload = {\n    device: msg.payload.device,\n    id: msg.payload.id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "c833a04ff5aabf63"
            ]
        ]
    },
    {
        "id": "f8ef842f3f4ec6e2",
        "type": "change",
        "z": "3658f92f65d797b7",
        "name": "Paths",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "objectpaths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 100,
        "wires": [
            [
                "abfe81e068d09a16"
            ]
        ]
    },
    {
        "id": "47f2b2f8b9b55adb",
        "type": "change",
        "z": "3658f92f65d797b7",
        "name": "Hits",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.length",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "7d7ced935411a561"
            ]
        ]
    },
    {
        "id": "7d7ced935411a561",
        "type": "ui_text",
        "z": "3658f92f65d797b7",
        "group": "72dd22b22fef4056",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 490,
        "y": 320,
        "wires": []
    },
    {
        "id": "20c304fad2479a3c",
        "type": "change",
        "z": "3658f92f65d797b7",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "7d7ced935411a561"
            ]
        ]
    },
    {
        "id": "b8e9b7c91f7e8d22",
        "type": "link in",
        "z": "3658f92f65d797b7",
        "name": "Count Data",
        "links": [
            "d5e5d4deb367ce9a",
            "fafa213522f3598a",
            "854c158e73c41b71",
            "cea402449fccc72f"
        ],
        "x": 235,
        "y": 320,
        "wires": [
            [
                "47f2b2f8b9b55adb"
            ]
        ]
    },
    {
        "id": "5c1757bec784e133",
        "type": "link in",
        "z": "3658f92f65d797b7",
        "name": "Reset Table",
        "links": [
            "0c56474b6222ab1b",
            "3bd482b9089e81c3",
            "3f44c8a1ac857f89"
        ],
        "x": 235,
        "y": 140,
        "wires": [
            [
                "5579e37eb7dfda73"
            ]
        ]
    },
    {
        "id": "adb4ba1feb59f351",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "Reset",
        "info": "",
        "x": 130,
        "y": 140,
        "wires": []
    },
    {
        "id": "c833a04ff5aabf63",
        "type": "mongodb in",
        "z": "3658f92f65d797b7",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "detections",
        "operation": "find",
        "x": 820,
        "y": 100,
        "wires": [
            [
                "f8ef842f3f4ec6e2"
            ]
        ]
    },
    {
        "id": "8e5c49cbc14c16b0",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "Paths",
        "info": "",
        "x": 1250,
        "y": 100,
        "wires": []
    },
    {
        "id": "7e51d2d2d21bb540",
        "type": "link in",
        "z": "3658f92f65d797b7",
        "name": "Table Data",
        "links": [
            "d5e5d4deb367ce9a",
            "fafa213522f3598a",
            "854c158e73c41b71",
            "cea402449fccc72f"
        ],
        "x": 235,
        "y": 100,
        "wires": [
            [
                "0c6467ad366d2ecd"
            ]
        ]
    },
    {
        "id": "f7c162d4a015c536",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "Data",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "cb5f057e3a19bd0c",
        "type": "link in",
        "z": "3658f92f65d797b7",
        "name": "Reset Counter",
        "links": [
            "0c56474b6222ab1b",
            "15eeae9f8e7c78cc",
            "3bd482b9089e81c3",
            "3f44c8a1ac857f89"
        ],
        "x": 235,
        "y": 360,
        "wires": [
            [
                "20c304fad2479a3c"
            ]
        ]
    },
    {
        "id": "db457d586a8565b9",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "Reset",
        "info": "",
        "x": 130,
        "y": 360,
        "wires": []
    },
    {
        "id": "851122fd6e4dee87",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "Data",
        "info": "",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "612d445635fd947b",
        "type": "function",
        "z": "3658f92f65d797b7",
        "name": "Find",
        "func": "msg.device = msg.payload.device;\nmsg.payload = {\n    device: msg.payload.device,\n    id: msg.payload.id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 140,
        "wires": [
            [
                "6a4a0749f5e736c1"
            ]
        ]
    },
    {
        "id": "6a4a0749f5e736c1",
        "type": "mongodb in",
        "z": "3658f92f65d797b7",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "images",
        "operation": "find",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "2968775d47f5ff0a"
            ]
        ]
    },
    {
        "id": "2968775d47f5ff0a",
        "type": "function",
        "z": "3658f92f65d797b7",
        "name": "image",
        "func": "if( msg.payload.length !== 1 )\n    return;\nmsg.topic = \"image\";\nmsg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "f176d46fa40bd346"
            ]
        ]
    },
    {
        "id": "f176d46fa40bd346",
        "type": "link out",
        "z": "3658f92f65d797b7",
        "name": "image",
        "mode": "link",
        "links": [
            "597076107473225f"
        ],
        "x": 1175,
        "y": 140,
        "wires": []
    },
    {
        "id": "81fea0c80c7bd309",
        "type": "comment",
        "z": "3658f92f65d797b7",
        "name": "image",
        "info": "",
        "x": 1250,
        "y": 140,
        "wires": []
    },
    {
        "id": "bb8a987d112f3d8a",
        "type": "link out",
        "z": "3658f92f65d797b7",
        "name": "Selected path",
        "mode": "link",
        "links": [
            "eabdd670aea41072"
        ],
        "x": 575,
        "y": 180,
        "wires": []
    },
    {
        "id": "864b5c5e3937b430",
        "type": "ui_dropdown",
        "z": "e1d661b05780e560",
        "name": "Cameras",
        "label": "",
        "tooltip": "",
        "place": "Select camera",
        "group": "a36251364e32fe2d",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "d66f76110b06fe28"
            ]
        ]
    },
    {
        "id": "4d20f2bc5d23592e",
        "type": "ui_dropdown",
        "z": "e1d661b05780e560",
        "name": "Time",
        "label": "Time",
        "tooltip": "",
        "place": "Time",
        "group": "a36251364e32fe2d",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Dates",
                "value": 0,
                "type": "num"
            },
            {
                "label": "Last 15 minutes",
                "value": 0.25,
                "type": "num"
            },
            {
                "label": "Last 30 minutes",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "Last hour",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Last 3 hours",
                "value": 3,
                "type": "num"
            },
            {
                "label": "Last 6 hours",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 570,
        "y": 480,
        "wires": [
            [
                "47d6bf96173d6a64"
            ]
        ]
    },
    {
        "id": "47d6bf96173d6a64",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "5a5233d0d08568d0",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 480,
        "wires": [
            [
                "4d20f2bc5d23592e"
            ]
        ]
    },
    {
        "id": "8c89a84efc013ed0",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Camera",
        "func": "if( msg.payload.length !== 1 )\n    return;\nmsg.topic = \"camera\";\nmsg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 440,
        "wires": [
            [
                "cb8071f882c3a4e9"
            ]
        ]
    },
    {
        "id": "f9c64213398892d2",
        "type": "ui_dropdown",
        "z": "e1d661b05780e560",
        "name": "Type",
        "label": "Type",
        "tooltip": "",
        "place": "Any",
        "group": "f3d9db3167cf7416",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Person",
                "value": "Person",
                "type": "str"
            },
            {
                "label": "Car",
                "value": "Car",
                "type": "str"
            },
            {
                "label": "Truck",
                "value": "Truck",
                "type": "str"
            },
            {
                "label": "Bus",
                "value": "Bus",
                "type": "str"
            },
            {
                "label": "Motorcycle",
                "value": "Motorcycle",
                "type": "str"
            },
            {
                "label": "Vehicle",
                "value": "Vehicle",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 810,
        "y": 1160,
        "wires": [
            [
                "d8b559d975335327"
            ]
        ]
    },
    {
        "id": "d8b559d975335327",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "ea19f2d6dd971265",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Cameras",
        "func": "var cameras = global.get(\"cameras\");\n\nmsg.options = [];\nmsg.payload.forEach( function(camera) {\n    var option = {};\n    option[camera.name] = camera.deviceID;\n    msg.options.push(option);\n});\nmsg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "864b5c5e3937b430"
            ]
        ]
    },
    {
        "id": "92e397ab5d5bb229",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "Reset Filter",
        "group": "f3d9db3167cf7416",
        "order": 1,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Reset Filters",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "reset",
        "topicType": "str",
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "841d0e21e44495a5"
            ]
        ]
    },
    {
        "id": "841d0e21e44495a5",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "birth",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "death",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "e5ce5d3d092a524c",
                "223d4a4285b803b6",
                "e31c1ada98448a6e",
                "b7e4c0492561e6b8",
                "dffabb090dc7d589"
            ]
        ]
    },
    {
        "id": "0ac30a691a493479",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "Apply filter",
        "group": "f3d9db3167cf7416",
        "order": 8,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Apply filter",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 210,
        "y": 1400,
        "wires": [
            [
                "4decef057b720575"
            ]
        ]
    },
    {
        "id": "0c56474b6222ab1b",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "Camera",
        "mode": "link",
        "links": [
            "484c227410fafc31",
            "cb5f057e3a19bd0c",
            "5c1757bec784e133",
            "f6cd686caf9ae7e6"
        ],
        "x": 1285,
        "y": 440,
        "wires": []
    },
    {
        "id": "2054913c07862986",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Camera",
        "info": "",
        "x": 1350,
        "y": 440,
        "wires": []
    },
    {
        "id": "cb8071f882c3a4e9",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "payload.deviceID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 440,
        "wires": [
            [
                "0c56474b6222ab1b",
                "c7ab435c0734a51d"
            ]
        ]
    },
    {
        "id": "5702a3d1c5db8588",
        "type": "mongodb in",
        "z": "e1d661b05780e560",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "aggregate",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "dedcae10ab139369"
            ]
        ]
    },
    {
        "id": "d66f76110b06fe28",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Get Camera",
        "func": "msg.payload = {\n    deviceID: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 380,
        "wires": [
            [
                "92017f0c31a1c52b"
            ]
        ]
    },
    {
        "id": "92017f0c31a1c52b",
        "type": "mongodb in",
        "z": "e1d661b05780e560",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "find",
        "x": 730,
        "y": 440,
        "wires": [
            [
                "8c89a84efc013ed0",
                "57985e9a3e6896c5"
            ]
        ]
    },
    {
        "id": "17376a25750cddb8",
        "type": "link in",
        "z": "e1d661b05780e560",
        "name": "Refresh cameras",
        "links": [
            "70b7c814433e76f4",
            "3f44c8a1ac857f89"
        ],
        "x": 325,
        "y": 320,
        "wires": [
            [
                "e3a9d7a948e8609f"
            ]
        ]
    },
    {
        "id": "e3a9d7a948e8609f",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "objectpaths",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 320,
        "wires": [
            [
                "5702a3d1c5db8588"
            ]
        ]
    },
    {
        "id": "c7ab435c0734a51d",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "d7f8d78d063b714e"
        ],
        "x": 1285,
        "y": 480,
        "wires": []
    },
    {
        "id": "15954c926c8a592a",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Query",
        "info": "",
        "x": 1350,
        "y": 480,
        "wires": []
    },
    {
        "id": "57985e9a3e6896c5",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Not found",
        "func": "if( msg.payload.length > 0 )\n    return;\nmsg.topic = \"camera\";\nmsg.payload = \"None\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 480,
        "wires": [
            [
                "15eeae9f8e7c78cc"
            ]
        ]
    },
    {
        "id": "15eeae9f8e7c78cc",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "3a6f12fcf20c63af",
            "cb5f057e3a19bd0c",
            "e2f9250793b5244e",
            "f1685b5b0e483973",
            "40e26c274871fc09"
        ],
        "x": 1095,
        "y": 480,
        "wires": []
    },
    {
        "id": "07bf14ded2706ad3",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Reset",
        "info": "",
        "x": 1170,
        "y": 480,
        "wires": []
    },
    {
        "id": "c98a2e22f09886c6",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "Reset query",
        "group": "a36251364e32fe2d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "3530d7db16840608"
            ]
        ]
    },
    {
        "id": "3f44c8a1ac857f89",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "3a6f12fcf20c63af",
            "4d2830ff13fc3058",
            "5c1757bec784e133",
            "bf2b1692ea0b623b",
            "cb5f057e3a19bd0c",
            "e2f9250793b5244e",
            "f1685b5b0e483973",
            "17376a25750cddb8",
            "5614b0cac7fba069",
            "40e26c274871fc09"
        ],
        "x": 635,
        "y": 260,
        "wires": []
    },
    {
        "id": "4d2830ff13fc3058",
        "type": "link in",
        "z": "e1d661b05780e560",
        "name": "Reset Time",
        "links": [
            "3f44c8a1ac857f89"
        ],
        "x": 305,
        "y": 480,
        "wires": [
            [
                "5a5233d0d08568d0",
                "74467fdea82d95df"
            ]
        ]
    },
    {
        "id": "3530d7db16840608",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "time",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "objectpaths",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "3f44c8a1ac857f89"
            ]
        ]
    },
    {
        "id": "fed358826a97b2c4",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Refresh cameras",
        "info": "",
        "x": 220,
        "y": 320,
        "wires": []
    },
    {
        "id": "b232744c65b2a01f",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Reset Time",
        "info": "",
        "x": 210,
        "y": 480,
        "wires": []
    },
    {
        "id": "dbfe045da2378501",
        "type": "ui_date_picker",
        "z": "e1d661b05780e560",
        "name": "",
        "label": "From",
        "group": "a36251364e32fe2d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 520,
        "wires": [
            [
                "b267149301e00123"
            ]
        ]
    },
    {
        "id": "b267149301e00123",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Local Time",
        "func": "var d = new Date(msg.payload);\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nmsg.payload = d.getTime();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 520,
        "wires": [
            [
                "8bd2905547bf88ef"
            ]
        ]
    },
    {
        "id": "f15af51dc4cd74fa",
        "type": "ui_date_picker",
        "z": "e1d661b05780e560",
        "name": "To",
        "label": "To&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",
        "group": "a36251364e32fe2d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "15511485982e68ad"
            ]
        ]
    },
    {
        "id": "15511485982e68ad",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Local Time",
        "func": "var d = new Date(msg.payload);\nd.setHours(0);\nd.setMinutes(0);\nd.setSeconds(0);\nmsg.payload = d.getTime() + (24*3600*1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 560,
        "wires": [
            [
                "81e5e959a0ad0cf3"
            ]
        ]
    },
    {
        "id": "8bd2905547bf88ef",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "from",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "81e5e959a0ad0cf3",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "to",
                "pt": "flow",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "781434a0672ede24",
        "type": "ui_ui_control",
        "z": "e1d661b05780e560",
        "name": "User group collaps",
        "events": "change",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "faa41a4d022efada",
                "16988d2f76e49144"
            ]
        ]
    },
    {
        "id": "faa41a4d022efada",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "User Selected Query",
        "func": "if( msg.payload === \"group\" && msg.group === \"Query_Query\"  && msg.open === true ) {\n    msg.payload = {\n        group: {\n            close: [\"Query_Filter\"]\n        }    \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "3d0b8b575e71b918",
                "ac75e46e1fbbf62a"
            ]
        ]
    },
    {
        "id": "16988d2f76e49144",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "User selected filter",
        "func": "if( msg.payload === \"group\" && msg.group === \"Query_Filter\"  && msg.open === true ){\n    msg.payload = {\n        group: {\n            close: [\"Query_Query\"]\n        }    \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "3d0b8b575e71b918"
            ]
        ]
    },
    {
        "id": "3d0b8b575e71b918",
        "type": "ui_ui_control",
        "z": "e1d661b05780e560",
        "name": "Collaps UI group",
        "events": "change",
        "x": 750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2d57e716c0a5ce01",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Build query",
        "func": "if( !flow.get(\"camera\") )\n    return;\n    \nmsg.payload = {\n    device: flow.get(\"camera\"),\n}\n\nif( flow.get(\"time\") ) {\n    msg.payload.timestamp = {\n        $gte: new Date().getTime() - (flow.get(\"time\")*3600*1000)\n    }\n} else {\n    msg.payload.timestamp = {\n        $gte: flow.get(\"from\"),\n        $lte: flow.get(\"to\")\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 620,
        "wires": [
            [
                "2b0fef993b848ddc"
            ]
        ]
    },
    {
        "id": "fafa213522f3598a",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "objectpaths",
        "mode": "link",
        "links": [
            "484c227410fafc31",
            "7e51d2d2d21bb540",
            "b8e9b7c91f7e8d22"
        ],
        "x": 915,
        "y": 40,
        "wires": []
    },
    {
        "id": "d643295231c825df",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "objectpaths",
        "info": "",
        "x": 1020,
        "y": 40,
        "wires": []
    },
    {
        "id": "2b0fef993b848ddc",
        "type": "mongodb in",
        "z": "e1d661b05780e560",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "detections",
        "operation": "find",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "f1f106acce2565c5"
            ]
        ]
    },
    {
        "id": "0020741217023d19",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "objectpaths",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 680,
        "wires": [
            [
                "738f4fb7ab874d6d"
            ]
        ]
    },
    {
        "id": "1f3a471ada2652f3",
        "type": "sort",
        "z": "e1d661b05780e560",
        "name": "Sort by time",
        "order": "ascending",
        "as_num": true,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "timestamp",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "0e45b62cf1811873"
            ]
        ]
    },
    {
        "id": "313b8ea4cd82a181",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "",
        "group": "a36251364e32fe2d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Query",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 620,
        "wires": [
            [
                "2d57e716c0a5ce01"
            ]
        ]
    },
    {
        "id": "0e45b62cf1811873",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "TOPIC: objectpaths",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "objectpaths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "fafa213522f3598a"
            ]
        ]
    },
    {
        "id": "f1f106acce2565c5",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Make List",
        "func": "msg.payload.forEach(function(object){\n    var d = new Date(object.timestamp);\n    object.time = d.getFullYear()+\"-\"+('0'+(d.getMonth()+1)).substr(-2,2)+\"-\"+('0'+d.getDate()).substr(-2,2) + \" \" +('0'+d.getHours()).substr(-2,2)+\":\"+('0'+d.getMinutes()).substr(-2,2);\n    object.speed = object.maxSpeed || parseInt((object.distance/object.age));\n});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 680,
        "wires": [
            [
                "0020741217023d19"
            ]
        ]
    },
    {
        "id": "5614b0cac7fba069",
        "type": "link in",
        "z": "e1d661b05780e560",
        "name": "Output",
        "links": [
            "738f4fb7ab874d6d",
            "4e668dbacc4e4539",
            "3f44c8a1ac857f89",
            "553d650c491bc1b2"
        ],
        "x": 275,
        "y": 40,
        "wires": [
            [
                "1f3a471ada2652f3"
            ]
        ]
    },
    {
        "id": "738f4fb7ab874d6d",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "5614b0cac7fba069"
        ],
        "x": 1245,
        "y": 680,
        "wires": []
    },
    {
        "id": "3f7dc1820a08849c",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Output",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "241cdb64521b7552",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Output",
        "info": "",
        "x": 1310,
        "y": 680,
        "wires": []
    },
    {
        "id": "ac75e46e1fbbf62a",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "3a6f12fcf20c63af",
            "40e26c274871fc09"
        ],
        "x": 675,
        "y": 140,
        "wires": []
    },
    {
        "id": "4249344b39c355a5",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Reset filters",
        "info": "",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "74467fdea82d95df",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "Rest",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "f15af51dc4cd74fa",
                "dbfe045da2378501"
            ]
        ]
    },
    {
        "id": "3a6f12fcf20c63af",
        "type": "link in",
        "z": "e1d661b05780e560",
        "name": "Reset filters",
        "links": [
            "15eeae9f8e7c78cc",
            "55d097613a5ba17d",
            "3f44c8a1ac857f89",
            "ac75e46e1fbbf62a"
        ],
        "x": 305,
        "y": 980,
        "wires": [
            [
                "841d0e21e44495a5"
            ]
        ]
    },
    {
        "id": "b0d5dff159cf8014",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Reset filters",
        "info": "",
        "x": 210,
        "y": 980,
        "wires": []
    },
    {
        "id": "6d29a9bde9f44767",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "",
        "group": "f3d9db3167cf7416",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Birth",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "picture_in_picture",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 810,
        "y": 1080,
        "wires": [
            [
                "b82eda8fdd753c48"
            ]
        ]
    },
    {
        "id": "b82eda8fdd753c48",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "flow.birth",
        "func": "area = flow.get(\"birth\");\n\nif( !area )\n    area = {\n        x1: 250,\n        x2: 750,\n        y1: 250,\n        y2: 750\n    };\n\nflow.set(\"birth\",area);\n\nmsg.topic = \"birth\";\nmsg.payload = area;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1080,
        "wires": [
            [
                "cf47677bc668681e"
            ]
        ]
    },
    {
        "id": "ceca68bc6d5779c9",
        "type": "ui_button",
        "z": "e1d661b05780e560",
        "name": "",
        "group": "f3d9db3167cf7416",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Death",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "picture_in_picture_alt",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 810,
        "y": 1120,
        "wires": [
            [
                "88dc4aadbaae12d5"
            ]
        ]
    },
    {
        "id": "88dc4aadbaae12d5",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "flow.death",
        "func": "area = flow.get(\"death\");\n\nif( !area )\n    area = {\n        x1: 250,\n        x2: 750,\n        y1: 250,\n        y2: 750\n    };\n\nflow.set(\"death\",area);\n\nmsg.topic = \"death\";\nmsg.payload = area;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "cf47677bc668681e"
            ]
        ]
    },
    {
        "id": "cf47677bc668681e",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "7f11d7b47e01f853"
        ],
        "x": 1185,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d331a9b16f078ba1",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Birth/Death",
        "info": "",
        "x": 1260,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4decef057b720575",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "objectpaths",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "78020c3d182a1a8c"
            ]
        ]
    },
    {
        "id": "c6e742080220ed8e",
        "type": "link in",
        "z": "e1d661b05780e560",
        "name": "Set brith death filter",
        "links": [
            "42717058f237d0dd"
        ],
        "x": 1375,
        "y": 1120,
        "wires": [
            [
                "758845c5ee819848"
            ]
        ]
    },
    {
        "id": "758845c5ee819848",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Set birth and death filter",
        "func": "flow.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 1120,
        "wires": []
    },
    {
        "id": "a7f2a0f0ac017959",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Set brith death filter",
        "info": "",
        "x": 1260,
        "y": 1120,
        "wires": []
    },
    {
        "id": "78020c3d182a1a8c",
        "type": "function",
        "z": "e1d661b05780e560",
        "name": "Filter",
        "func": "\nvar list = [];\n\nmsg.payload.forEach(function(object){\n    if( flow.get(\"birth\") ) {\n        var birth = flow.get(\"birth\");\n        var first = object.path[0];\n        if( first.x < birth.x1 || first.x > birth.x2)\n            return;\n        if( first.y < birth.y1 || first.y > birth.y2 )\n            return;\n    }\n    \n    if( flow.get(\"death\") ) {\n        var death = flow.get(\"death\");\n        var last = object.path[object.path.length-1];\n        if( last.x < death.x1 || last.x > death.x2) \n            return;\n        if( last.y < death.y1 || last.y > death.y2 )\n            return;\n    }\n    \n    if( flow.get(\"type\") ) {\n        var type = flow.get(\"type\");\n        if( flow.get(\"type\") === \"Vehicle\") {\n            if(  object.vehicle !== true  )\n                return;\n        } else {\n            if( object.type !== type )\n                return;\n        }\n    }\n    \n    if( flow.get(\"direction\")) {\n        direction = flow.get(\"direction\");\n\n        if( direction && direction === \"Up\" && object.dy > 0 )\n            return;\n    \n        if( direction && direction === \"Down\" && object.dy < 0 )\n            return;\n    \n        if( direction && direction === \"Left\" && object.dx > 0 )\n            return;\n    \n        if( direction && direction === \"Right\" && object.dx < 0 )\n            return;\n    }\n\n    if( flow.get(\"age\") ) {\n        var age = flow.get(\"age\");\n\n        if( age > 0 && object.age < age )\n            return;\n        if( age < 0 && object.age > -age )\n            return;\n    }\n\n    if( flow.get(\"distance\") ) {\n        var distance = flow.get(\"distance\");\n\n        if( distance > 0 && object.distance < distance )\n            return;\n        if( distance < 0 && object.distance > -distance )\n            return;\n    }\n\n    if( flow.get(\"speed\") ) {\n        var speed = flow.get(\"speed\");\n\n        if( speed > 0 && object.speed < speed )\n            return;\n        if( speed < 0 && object.speed > -speed )\n            return;\n    }\n\n    list.push(object);\n});\n\nmsg.payload = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "4e668dbacc4e4539"
            ]
        ]
    },
    {
        "id": "e5ce5d3d092a524c",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "objectpaths",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "objectpaths",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1020,
        "wires": [
            [
                "854c158e73c41b71"
            ]
        ]
    },
    {
        "id": "854c158e73c41b71",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "objectpaths",
        "mode": "link",
        "links": [
            "484c227410fafc31",
            "7e51d2d2d21bb540",
            "b8e9b7c91f7e8d22"
        ],
        "x": 805,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bb975d4324f67648",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Paths",
        "info": "",
        "x": 890,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1ab10ebb695d7bd5",
        "type": "ui_numeric",
        "z": "e1d661b05780e560",
        "name": "",
        "label": "Age",
        "tooltip": "",
        "group": "f3d9db3167cf7416",
        "order": 6,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "-100",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "85cc236d69c3629e"
            ]
        ]
    },
    {
        "id": "223d4a4285b803b6",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1200,
        "wires": [
            [
                "1ab10ebb695d7bd5"
            ]
        ]
    },
    {
        "id": "85cc236d69c3629e",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "age",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "e31c1ada98448a6e",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1240,
        "wires": [
            [
                "73b5c1a0d6c2f263"
            ]
        ]
    },
    {
        "id": "73b5c1a0d6c2f263",
        "type": "ui_numeric",
        "z": "e1d661b05780e560",
        "name": "",
        "label": "Distance",
        "tooltip": "",
        "group": "f3d9db3167cf7416",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "-100",
        "max": "100",
        "step": "1",
        "className": "",
        "x": 820,
        "y": 1240,
        "wires": [
            [
                "2f56b63029ce9ba4"
            ]
        ]
    },
    {
        "id": "2f56b63029ce9ba4",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "distance",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7c3655b4a2d85a74",
        "type": "ui_dropdown",
        "z": "e1d661b05780e560",
        "name": "Direction",
        "label": "Direction",
        "tooltip": "",
        "place": "Any",
        "group": "f3d9db3167cf7416",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Up",
                "value": "Up",
                "type": "str"
            },
            {
                "label": "Down",
                "value": "Down",
                "type": "str"
            },
            {
                "label": "Left",
                "value": "Left",
                "type": "str"
            },
            {
                "label": "Right",
                "value": "Right",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 820,
        "y": 1280,
        "wires": [
            [
                "794bb0d3cb23dea9"
            ]
        ]
    },
    {
        "id": "794bb0d3cb23dea9",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "direction",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e4c0492561e6b8",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "direction",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1280,
        "wires": [
            [
                "7c3655b4a2d85a74"
            ]
        ]
    },
    {
        "id": "dffabb090dc7d589",
        "type": "change",
        "z": "e1d661b05780e560",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "type",
                "pt": "flow",
                "to": "null",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1160,
        "wires": [
            [
                "f9c64213398892d2"
            ]
        ]
    },
    {
        "id": "4e668dbacc4e4539",
        "type": "link out",
        "z": "e1d661b05780e560",
        "name": "",
        "mode": "link",
        "links": [
            "5614b0cac7fba069"
        ],
        "x": 675,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f43f770ca79108fb",
        "type": "comment",
        "z": "e1d661b05780e560",
        "name": "Output",
        "info": "",
        "x": 740,
        "y": 1400,
        "wires": []
    },
    {
        "id": "dedcae10ab139369",
        "type": "sort",
        "z": "e1d661b05780e560",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "name",
        "msgKeyType": "jsonata",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 970,
        "y": 380,
        "wires": [
            [
                "ea19f2d6dd971265"
            ]
        ]
    },
    {
        "id": "48d08537b75a1ff1",
        "type": "mqtt in",
        "z": "251e28d43075d4af",
        "name": "",
        "topic": "objectpath/detection/#",
        "qos": "2",
        "datatype": "json",
        "broker": "260e45057b94b302",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 100,
        "wires": [
            [
                "b2920347a89cd63e"
            ]
        ]
    },
    {
        "id": "b2920347a89cd63e",
        "type": "mongodb out",
        "z": "251e28d43075d4af",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "detections",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "c45f9e50fbf5cb85",
        "type": "inject",
        "z": "251e28d43075d4af",
        "name": "Every midnight",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "c6085e354b348fe1"
            ]
        ]
    },
    {
        "id": "c6085e354b348fe1",
        "type": "function",
        "z": "251e28d43075d4af",
        "name": "Retention 3 months",
        "func": "msg.payload = {\n    timestamp: {\n        $lte: new Date().getTime() - (3 * 31 * 24 * 3660 * 1000)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 280,
        "wires": [
            [
                "3a95e4e0d0961a70"
            ]
        ]
    },
    {
        "id": "3a95e4e0d0961a70",
        "type": "mongodb out",
        "z": "251e28d43075d4af",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "detections",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "dd02a9dcbbe6ef02",
        "type": "inject",
        "z": "251e28d43075d4af",
        "name": "Every midnight",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "d043b32870525baf"
            ]
        ]
    },
    {
        "id": "d043b32870525baf",
        "type": "function",
        "z": "251e28d43075d4af",
        "name": "Retention 1 week",
        "func": "msg.payload = {\n    timestamp: {\n        $lte: new Date().getTime() - (7 * 24 * 3660 * 1000)\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 320,
        "wires": [
            [
                "2b5cebfa300dbffc"
            ]
        ]
    },
    {
        "id": "2b5cebfa300dbffc",
        "type": "mongodb out",
        "z": "251e28d43075d4af",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "images",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "a6006e34179d2d40",
        "type": "axis-camera",
        "z": "28ebc073.75bf28",
        "name": "",
        "preset": "0c3b4ea904d339eb",
        "action": "Camera Info",
        "resolution": "640x360",
        "output": "Base64",
        "filename": "",
        "options": "",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "89ef3f961bd6aafb"
            ]
        ]
    },
    {
        "id": "3b2992fba60190ac",
        "type": "axis-camera",
        "z": "28ebc073.75bf28",
        "name": "",
        "preset": "0c3b4ea904d339eb",
        "action": "JPEG Image",
        "resolution": "640x360",
        "output": "Base64",
        "filename": "",
        "options": "",
        "x": 950,
        "y": 320,
        "wires": [
            [
                "cf1b1aec8f1bb214"
            ]
        ]
    },
    {
        "id": "16196afcd0684f50",
        "type": "axis-device",
        "z": "28ebc073.75bf28",
        "name": "",
        "preset": "0c3b4ea904d339eb",
        "action": "Device Info",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 950,
        "y": 200,
        "wires": [
            [
                "79e33cf8725a0bd3",
                "d6fd434ce037d2c3"
            ]
        ]
    },
    {
        "id": "6470d606df30ca9a",
        "type": "function",
        "z": "28ebc073.75bf28",
        "name": "msg.camera",
        "func": "msg.camera = {\n    deviceID: msg.payload.serial,\n    model: msg.payload.model,\n    name: msg.name || msg.payload.serial,\n    address: msg.address,\n    image: null\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 200,
        "wires": [
            [
                "a6006e34179d2d40"
            ]
        ]
    },
    {
        "id": "79e33cf8725a0bd3",
        "type": "switch",
        "z": "28ebc073.75bf28",
        "name": "Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "58a3bde00eaeb02d"
            ]
        ]
    },
    {
        "id": "d6fd434ce037d2c3",
        "type": "switch",
        "z": "28ebc073.75bf28",
        "name": "OK",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "6470d606df30ca9a"
            ]
        ]
    },
    {
        "id": "89ef3f961bd6aafb",
        "type": "function",
        "z": "28ebc073.75bf28",
        "name": "msg.camera",
        "func": "if(msg.error !== false )\n    return msg;\n\nmsg.camera.image = {\n    resolution: msg.payload.medium,\n    aspect: msg.payload.aspect,\n    rotation: msg.payload.rotation,\n    jpeg: null\n}\nmsg.resolution = msg.camera.image.resolution;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 260,
        "wires": [
            [
                "3b2992fba60190ac"
            ]
        ]
    },
    {
        "id": "cf1b1aec8f1bb214",
        "type": "function",
        "z": "28ebc073.75bf28",
        "name": "msg.camera",
        "func": "if(msg.error !== false )\n    return msg;\n\nmsg.camera.image.jpeg = msg.payload;\nmsg.payload = msg.camera;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 320,
        "wires": [
            [
                "5f0597919a6f7851"
            ]
        ]
    },
    {
        "id": "2c5528b799c111f0",
        "type": "mongodb out",
        "z": "28ebc073.75bf28",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1180,
        "y": 380,
        "wires": []
    },
    {
        "id": "5f0597919a6f7851",
        "type": "function",
        "z": "28ebc073.75bf28",
        "name": "Update",
        "func": "msg.query = {\n    deviceID: msg.payload.deviceID\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 380,
        "wires": [
            [
                "2c5528b799c111f0",
                "6ecdd030a88441a7"
            ]
        ]
    },
    {
        "id": "6c5dfc0e5dfc67ba",
        "type": "mongodb in",
        "z": "28ebc073.75bf28",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "aggregate",
        "x": 1430,
        "y": 440,
        "wires": [
            [
                "42c6e40963f7ab71"
            ]
        ]
    },
    {
        "id": "749d9bce0cb9cf51",
        "type": "ui_form",
        "z": "28ebc073.75bf28",
        "name": "",
        "label": "",
        "group": "8ac77bf8599762bf",
        "order": 12,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Camera Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Address",
                "value": "address",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "address": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "0414f46a390bcf56"
            ]
        ]
    },
    {
        "id": "0414f46a390bcf56",
        "type": "change",
        "z": "28ebc073.75bf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "address",
                "pt": "msg",
                "to": "payload.address",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "16196afcd0684f50"
            ]
        ]
    },
    {
        "id": "58a3bde00eaeb02d",
        "type": "change",
        "z": "28ebc073.75bf28",
        "name": "Message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Could not add camera",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Check addres, user, password and connection.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 140,
        "wires": [
            [
                "010f9b9bb322281e"
            ]
        ]
    },
    {
        "id": "010f9b9bb322281e",
        "type": "ui_toast",
        "z": "28ebc073.75bf28",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1450,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4696d9710b4da495",
        "type": "ui_button",
        "z": "28ebc073.75bf28",
        "name": "",
        "group": "21eb74a18b2872fc",
        "order": 1,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "4bc054c39d82a140"
            ]
        ]
    },
    {
        "id": "329e3619966aa3fb",
        "type": "ui_table",
        "z": "28ebc073.75bf28",
        "group": "21eb74a18b2872fc",
        "name": "",
        "order": 2,
        "width": "12",
        "height": "12",
        "columns": [
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "model",
                "title": "Model",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "link",
                "title": "Address",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "deviceID",
                "title": "Serial",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1810,
        "y": 440,
        "wires": []
    },
    {
        "id": "4bc054c39d82a140",
        "type": "mongodb in",
        "z": "28ebc073.75bf28",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "aggregate",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "98128e98209601ad",
                "367edef341e03848"
            ]
        ]
    },
    {
        "id": "98128e98209601ad",
        "type": "split",
        "z": "28ebc073.75bf28",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 590,
        "y": 260,
        "wires": [
            [
                "0414f46a390bcf56"
            ]
        ]
    },
    {
        "id": "6ecdd030a88441a7",
        "type": "trigger",
        "z": "28ebc073.75bf28",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1000",
        "extend": true,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1180,
        "y": 440,
        "wires": [
            [
                "6c5dfc0e5dfc67ba"
            ]
        ]
    },
    {
        "id": "42c6e40963f7ab71",
        "type": "function",
        "z": "28ebc073.75bf28",
        "name": "link",
        "func": "msg.payload.forEach( function(camera) {\n    camera.link = '<a href=\"http://' + camera.address + '/local/objectpath/index.html\" target=\"_blank\">' + camera.address + '</a>';\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 440,
        "wires": [
            [
                "329e3619966aa3fb"
            ]
        ]
    },
    {
        "id": "367edef341e03848",
        "type": "debug",
        "z": "28ebc073.75bf28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 340,
        "wires": []
    },
    {
        "id": "768ca9b59c38c7c3",
        "type": "mqtt in",
        "z": "136ec2e31eae94eb",
        "name": "",
        "topic": "objectpath/detection/#",
        "qos": "2",
        "datatype": "json",
        "broker": "260e45057b94b302",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "c24eabd703bdb106"
            ]
        ]
    },
    {
        "id": "73e6c1d4638a7ab6",
        "type": "axis-device",
        "z": "136ec2e31eae94eb",
        "name": "",
        "preset": "0c3b4ea904d339eb",
        "action": "HTTP Get",
        "cgi": "",
        "data": "",
        "options": "",
        "filename": "",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "95343f7c8fd5b539",
                "aaf6af7486ae7adf"
            ]
        ]
    },
    {
        "id": "95343f7c8fd5b539",
        "type": "switch",
        "z": "136ec2e31eae94eb",
        "name": "Success",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 900,
        "y": 220,
        "wires": [
            [
                "c049183ad3632202"
            ]
        ]
    },
    {
        "id": "c049183ad3632202",
        "type": "mongodb out",
        "z": "136ec2e31eae94eb",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "images",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1160,
        "y": 220,
        "wires": []
    },
    {
        "id": "aaf6af7486ae7adf",
        "type": "switch",
        "z": "136ec2e31eae94eb",
        "name": "Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 260,
        "wires": [
            [
                "e7520b0cac7d118e"
            ]
        ]
    },
    {
        "id": "3dbc471162db0254",
        "type": "change",
        "z": "136ec2e31eae94eb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "objectpath",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "82af2c4969a7c2fe"
            ]
        ]
    },
    {
        "id": "c24eabd703bdb106",
        "type": "function",
        "z": "136ec2e31eae94eb",
        "name": "Camera filter",
        "func": "if( msg.payload.device === \"ACCC8EF33E99\")\n    return;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "3dbc471162db0254"
            ]
        ]
    },
    {
        "id": "82af2c4969a7c2fe",
        "type": "function",
        "z": "136ec2e31eae94eb",
        "name": "Find camera",
        "func": "msg.payload = {\n    deviceID: msg.payload.device\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 160,
        "wires": [
            [
                "c29ac87d407a9bce"
            ]
        ]
    },
    {
        "id": "c29ac87d407a9bce",
        "type": "mongodb in",
        "z": "136ec2e31eae94eb",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "find",
        "x": 1160,
        "y": 160,
        "wires": [
            [
                "376e9ad93fb582cb"
            ]
        ]
    },
    {
        "id": "376e9ad93fb582cb",
        "type": "function",
        "z": "136ec2e31eae94eb",
        "name": "get image",
        "func": "if( msg.payload.length !== 1 )\n    return;\nmsg.camera = msg.payload[0];\nmsg.address = msg.camera.address;\nmsg.cgi = '/local/objectpath/path?image=' + msg.objectpath.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 220,
        "wires": [
            [
                "73e6c1d4638a7ab6"
            ]
        ]
    },
    {
        "id": "b97581f498ac6826",
        "type": "comment",
        "z": "136ec2e31eae94eb",
        "name": "Disable this tab if you do not want to capture and store images",
        "info": "",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "e7520b0cac7d118e",
        "type": "debug",
        "z": "136ec2e31eae94eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 260,
        "wires": []
    },
    {
        "id": "7a8b24758ae7a279",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Get objectpaths today",
        "func": "var camera = flow.get(\"camera\");\nif(!camera || camera.length < 5 )\n    return;\n\nvar today = new Date();\ntoday.setHours(0);\ntoday.setMinutes(0);\n\n\nmsg.payload = {\n    device: camera,\n    timestamp: {\n        $gte: today.getTime()\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 680,
        "wires": [
            [
                "87667cb9743da1fc"
            ]
        ]
    },
    {
        "id": "87667cb9743da1fc",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "objectpath",
        "operation": "find",
        "x": 760,
        "y": 680,
        "wires": [
            [
                "f04b1363efab9c8b"
            ]
        ]
    },
    {
        "id": "bef4a80d826493e6",
        "type": "ui_dropdown",
        "z": "613bd474aa619f30",
        "name": "Cameras",
        "label": "",
        "tooltip": "",
        "place": "Camera",
        "group": "fe0c44dbc0f0af9e",
        "order": 2,
        "width": "0",
        "height": "0",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "7629973f8c4da2f8"
            ]
        ]
    },
    {
        "id": "060d5b7db9733eba",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Merge Area?",
        "func": "msg.birth = [];\nmsg.death = [];\n\nvar previous = null;\n\nmsg.aoi = flow.get(\"aoi\");\n\nmsg.payload.forEach( function (item){\n    var match = false;    \n\n    var birth = item.path[0];\n    if( birth.x > msg.aoi.x1 && birth.x < msg.aoi.x2 && birth.y > msg.aoi.y1 && birth.y < msg.aoi.y2 ) {\n        msg.birth.push( item );\n        return;\n    }\n    \n    var death = item.path[item.path.length-1];\n    if( death.x > msg.aoi.x1 && death.x < msg.aoi.x2 && death.y > msg.aoi.y1 && death.y < msg.aoi.y2 ) {\n        msg.death.push( item );\n        return;\n    }\n});\n\nmsg.topic = \"phase1\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1060,
        "wires": [
            [
                "5f3fa0f7b327627a"
            ]
        ]
    },
    {
        "id": "7629973f8c4da2f8",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Get Camera",
        "func": "msg.payload = {\n    deviceID: msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "8b03ad054e2716d0"
            ]
        ]
    },
    {
        "id": "8b03ad054e2716d0",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "find",
        "x": 400,
        "y": 340,
        "wires": [
            [
                "d6101da2105c77a1"
            ]
        ]
    },
    {
        "id": "d6101da2105c77a1",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Camera",
        "func": "if( msg.payload.length !== 1 )\n    return;\nmsg.topic = \"camera\";\nmsg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "80ef627b3533da08"
            ]
        ]
    },
    {
        "id": "80ef627b3533da08",
        "type": "change",
        "z": "613bd474aa619f30",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "camera",
                "pt": "flow",
                "to": "payload.deviceID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 340,
        "wires": [
            [
                "388cda36de538ea5"
            ]
        ]
    },
    {
        "id": "412e87888d619b17",
        "type": "ui_button",
        "z": "613bd474aa619f30",
        "name": "",
        "group": "fe0c44dbc0f0af9e",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "merge",
        "topicType": "str",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "51e56e94af932ecb",
                "5b66d5bb3c83f8c0"
            ]
        ]
    },
    {
        "id": "7e1dfb34f8f2ffc8",
        "type": "change",
        "z": "613bd474aa619f30",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mergearea",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "421c9cb2be3b0cf2",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "",
        "func": "var area = msg.payload;\n\nvar dx = area.x2 - area.x1;\nvar dy = area.y2 - area.y1;\narea.distance = Math.sqrt((dx*dx)+(dy*dy));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 820,
        "wires": [
            [
                "7e1dfb34f8f2ffc8"
            ]
        ]
    },
    {
        "id": "39b08be09bba2d8c",
        "type": "ui_button",
        "z": "613bd474aa619f30",
        "name": "Review births",
        "group": "fe0c44dbc0f0af9e",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Review births",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 680,
        "wires": [
            [
                "7a8b24758ae7a279"
            ]
        ]
    },
    {
        "id": "ea1a0e54bac17c08",
        "type": "ui_template",
        "z": "613bd474aa619f30",
        "group": "55506a558b776284",
        "name": "View",
        "order": 2,
        "width": "13",
        "height": "10",
        "format": "<link rel=\"stylesheet\" href=\"/css/imgareaselect-default.css\">\n<script src=\"/js/jquery.imgareaselect.js\"></script>\n\n<div id=\"{{'view_'+$id}}\" style=\"width:640px; height:360px\">\n    <div id=\"{{'frame_'+$id}}\" style=\"width:100%; height:100%; position:relative\">\n        <img id=\"{{'image_'+$id}}\" class=\"card-img-top\" src=\"\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\">\n        <canvas id=\"{{'canvas_'+$id}}\" width=\"1000\" height=\"1000\" style=\"width:100%; height:100%; position:absolute; top:0px; left:0px;\"></canvas>\n    </div>\n</div>\n\n<script>\nvar ctx = null;\nvar imageWidth = 640;\nvar imageHeight = 360;\nvar transperancy = 1.0;\n\nvar selectionArea = null;\nvar areaName = null;\n\nfunction ClearCanvas() {\n    if(ctx) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 1000, 1000 );\n        ctx.stroke();\n    }\n\n    if( selectionArea )\n        selectionArea.setOptions({ hide: true });\n    selectionArea = null;        \n}\n\nfunction drawPaths( color, list ) {\n    if(!ctx)\n        return;\n\n\tctx.beginPath();\n\tctx.strokeStyle = color;\n\tctx.lineWidth = 3;\n\t\n    list.forEach(function(object){\n    \tctx.moveTo(object.path[0].x, object.path[0].y );\n    \tfor( var i = 1; i < object.path.length; i++ )\n    \t\tctx.lineTo(object.path[i].x,object.path[i].y );\n    });\n\tctx.stroke();\t\n}\n\n\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if( !msg || !msg.topic ||  typeof msg.topic === undefined || !msg.payload )\n            return;\n        console.log(msg.topic);\n\n        if( msg.topic === \"camera\") {\n            imageWidth = 640;\n            imageHeight = 360;\n            \n            if( msg.payload.image.aspect === \"1:1\") {\n                imageWidth = 640;\n                imageHeight = 640;\n            }\n\n            if( msg.payload.image.aspect === \"4:3\") {\n                imageWidth = 640;\n                imageHeight = 480;\n            }\n\n            if( msg.payload.image.rotation === 90 || msg.payload.image.rotation === 270 ) {\n                var temp  = imageWidth;\n                imageWidth = imageHeight;\n                imageHeight = temp;\n            }\n\n            $(\"#view_\" + scope.$id).css(\"width\",imageWidth + \"px\");\n            $(\"#view_\" + scope.$id).css(\"height\",imageHeight + \"px\");\n            \n            if( msg.payload.image.jpeg)\n                $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ' + msg.payload.image.jpeg);\n            else\n                $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ');\n            \n            if(!ctx) {\n                canvas = document.getElementById(\"canvas_\"+scope.$id);\n                ctx = canvas.getContext(\"2d\");\n            }\n            ClearCanvas();\n            return;\n        }\n\n\n        if( msg.topic === \"reset\" ) {\n            ClearCanvas();\n//            $(\"#image_\"+scope.$id).attr(\"src\", 'data:image/jpeg;base64, ');\n\t\t\treturn;\n        }\n\n\t\tif( msg.topic === \"mergearea\" ) {\n\t\t    areaName = msg.topic;\n\t\t    if(!selectionArea) {\n    \t\t\tselectionArea = $(\"#image_\"+scope.$id).imgAreaSelect( {\n    \t\t\t\tx1: parseInt(msg.payload.x1 / 1000 * imageWidth),\n    \t\t\t\tx2: parseInt(msg.payload.x2 / 1000 * imageWidth),\n    \t\t\t\ty1: parseInt(msg.payload.y1 / 1000 * imageHeight),\n    \t\t\t\ty2: parseInt(msg.payload.y2 / 1000 * imageHeight),\n    \t\t\t\tshow: true, hide:false, minHeight: 5, minWidth: 5, handles: true, movable: true, resizable: true, instance:true,\n    \t\t\t\tonSelectEnd: function( image, area ) {\n    \t\t\t\t    var area = {\n                            x1: parseInt((area.x1/imageWidth) * 1000),\n                            x2: parseInt((area.x2/imageWidth) * 1000),\n                            y1: parseInt((area.y1/imageHeight) * 1000),\n                            y2: parseInt((area.y2/imageHeight) * 1000)\n    \t\t\t\t    }\n    \t\t\t\t\tscope.send({\n    \t\t\t\t\t\ttopic: areaName,\n    \t\t\t\t\t\tpayload: area\n    \t\t\t\t\t});\n    \t\t\t\t}\n    \t\t\t});\n\t\t    }\n\t\t    selectionArea.setSelection(\n\t\t        parseInt(msg.payload.x1 / 1000 * imageWidth),\n    \t\t\tparseInt(msg.payload.y1 / 1000 * imageHeight),\n\t\t\t\tparseInt(msg.payload.x2 / 1000 * imageWidth),\n    \t\t\tparseInt(msg.payload.y2 / 1000 * imageHeight)\n\t\t    );\n            selectionArea.setOptions({ show: true });\n\t\t}\n\t\t\n        if( msg.topic === \"objectpaths\" ) {\n            if( !ctx )\n                return;\n            ctx.beginPath();\n            ctx.clearRect(0, 0, 1000, 1000 );\n            ctx.stroke();\n\n            msg.payload.forEach(function(object){\n                var first = object.path[0];\n                var last = object.path[object.path.length-1];\n\n            \tctx.beginPath();\n            \tctx.lineWidth = 3;\n            \tctx.strokeStyle = '#00FF00';\n            \tctx.moveTo(first.x, first.y );\n            \tctx.arc(first.x, first.y, 3, 0, 2 * Math.PI);\n            \tctx.stroke();\t\n\n            \tctx.beginPath();\n            \tctx.strokeStyle = '#FFFF00';\n            \tctx.moveTo(object.path[0].x, object.path[0].y );\n            \tfor( var i = 1; i < object.path.length; i++ )\n            \t\tctx.lineTo(object.path[i].x,object.path[i].y );\n            \tctx.lineTo(last.x,last.y );\n            \tctx.stroke();\t\n            \n            \tctx.beginPath();\n            \tctx.lineWidth = 3;\n            \tctx.strokeStyle = '#FF0000';\n            \tctx.moveTo(last.x, last.y );\n            \tctx.arc(last.x, last.y, 3, 0, 2 * Math.PI);\n            \tctx.stroke();\t\n            });\n\t\t\treturn;\n        }\n\t\t\n    });\n})(scope);\n</script>        \n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 820,
        "wires": [
            [
                "421c9cb2be3b0cf2"
            ]
        ]
    },
    {
        "id": "f582bdd55c85e6e3",
        "type": "ui_button",
        "z": "613bd474aa619f30",
        "name": "",
        "group": "fe0c44dbc0f0af9e",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "72bd29069a09c144",
                "bb58ee3d2fc01ac4"
            ]
        ]
    },
    {
        "id": "72bd29069a09c144",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "cameras",
        "operation": "aggregate",
        "x": 400,
        "y": 280,
        "wires": [
            [
                "74e17b3a98455b9d"
            ]
        ]
    },
    {
        "id": "74e17b3a98455b9d",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Cameras",
        "func": "msg.options = [];\nmsg.payload.forEach( function(camera) {\n    var option = {};\n    option[camera.name] = camera.deviceID;\n    msg.options.push(option);\n});\nmsg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "bef4a80d826493e6"
            ]
        ]
    },
    {
        "id": "697f7acf2f6fa429",
        "type": "link in",
        "z": "613bd474aa619f30",
        "name": "",
        "links": [
            "388cda36de538ea5",
            "49b75ea7717ad4ee",
            "20f8a8ac8cc8d61f",
            "e63cc654c1c5152e",
            "4da8b934261e3fe8",
            "e05decd4718b805e",
            "dbe880558eea5752",
            "6026c5c16c212e84",
            "de1ecb8112fe1496",
            "d66a7c0b50350c28"
        ],
        "x": 225,
        "y": 820,
        "wires": [
            [
                "ea1a0e54bac17c08"
            ]
        ]
    },
    {
        "id": "388cda36de538ea5",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "697f7acf2f6fa429",
            "b7919f8b9f875594"
        ],
        "x": 985,
        "y": 340,
        "wires": []
    },
    {
        "id": "bb58ee3d2fc01ac4",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "a602c957a77ba382"
        ],
        "x": 335,
        "y": 240,
        "wires": []
    },
    {
        "id": "a602c957a77ba382",
        "type": "link in",
        "z": "613bd474aa619f30",
        "name": "",
        "links": [
            "bb58ee3d2fc01ac4",
            "51029014ad71ad1d",
            "5b66d5bb3c83f8c0"
        ],
        "x": 225,
        "y": 860,
        "wires": [
            [
                "4ecd41851ec7eccf"
            ]
        ]
    },
    {
        "id": "4ecd41851ec7eccf",
        "type": "change",
        "z": "613bd474aa619f30",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 860,
        "wires": [
            [
                "ea1a0e54bac17c08"
            ]
        ]
    },
    {
        "id": "5f3fa0f7b327627a",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Match",
        "func": "if( msg.payload.length < 2 )\n    return;\n\nvar list = [];\nvar aoi = flow.get(\"aoi\");\n\nmsg.death.forEach( function(death){\n    death.matches = [];\n    deathX = death.path[death.path.length-1].x;\n    deathY = death.path[death.path.length-1].y;\n    for(var i = 0; i < msg.birth.length; i++ ) {\n        var timeDiff = msg.birth[i].timestamp - (msg.birth[i].age * 1000 ) - death.timestamp;\n        if( timeDiff > 0 && timeDiff < 1500 ) {\n            var birthX = msg.birth[i].path[0].x;\n            var birthY = msg.birth[i].path[0].y;\n            var dx = birthX-deathX;\n            var dy = birthY-deathY;\n            var distance = Math.sqrt((dx*dx)+(dy*dy));\n            if( distance < aoi.distance ) {\n                death.matches.push(msg.birth[i]);\n            }\n        }\n    }\n    if( death.matches.length)\n        list.push(death);\n})\n\nmsg.payload = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1060,
        "wires": [
            [
                "46bcd0e705398e7f"
            ]
        ]
    },
    {
        "id": "46bcd0e705398e7f",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Angles",
        "func": "var list = [];\nmsg.merge = [];\n\nmsg.payload.forEach(function(object){\n\n    object.match = null;\n    object.angle = Math.atan2(-object.dy,object.dx);\n    \n    for( var i = 0; i < object.matches.length; i++ ) {\n        object.matches[i].angle = Math.atan2(-object.matches[i].dy,object.matches[i].dx);\n        if( Math.abs(object.angle - object.matches[i].angle ) < 1.5 )\n            object.match = object.matches[i];\n    }\n    if( object.match !== null ) {\n        delete object.matches;\n        list.push(object);\n        msg.merge.push(object.match);\n    }\n\n});\n\nmsg.payload = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1060,
        "wires": [
            [
                "24cb26408e1b0ac4"
            ]
        ]
    },
    {
        "id": "24cb26408e1b0ac4",
        "type": "change",
        "z": "613bd474aa619f30",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "phase1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "mergelist",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "8fc010647f1d0399",
        "type": "inject",
        "z": "613bd474aa619f30",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1260,
        "wires": [
            [
                "8aeea3e315e092e3"
            ]
        ]
    },
    {
        "id": "8aeea3e315e092e3",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "objectpath",
        "operation": "aggregate",
        "x": 550,
        "y": 1260,
        "wires": [
            [
                "572981fa7cc33c80"
            ]
        ]
    },
    {
        "id": "572981fa7cc33c80",
        "type": "split",
        "z": "613bd474aa619f30",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 770,
        "y": 1260,
        "wires": [
            [
                "4ce772b6bd5786b0"
            ]
        ]
    },
    {
        "id": "4ce772b6bd5786b0",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Process",
        "func": "msg.payload.atan2 = Math.atan2(-msg.payload.dy,msg.payload.dx);\n\nvar first = msg.payload.path[0];\nmsg.payload.fx = first.x;\nmsg.payload.fy = first.y;\n\nvar last = msg.payload.path[msg.payload.path.length-1];\nmsg.payload.lx = last.x;\nmsg.payload.ly = last.y;\n\n\nmsg.query = {\n    _id:msg.payload._id\n}\n\ndelete msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1260,
        "wires": [
            [
                "00b9890f8ec32d13"
            ]
        ]
    },
    {
        "id": "00b9890f8ec32d13",
        "type": "mongodb out",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "objectpath",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1170,
        "y": 1260,
        "wires": []
    },
    {
        "id": "51e56e94af932ecb",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Update",
        "func": "var camera = flow.get(\"camera\");\nif(!camera || camera.length < 5 )\n    return;\n\nmsg.payload = flow.get(\"mergearea\");\nif(!msg.payload)\n    return;\n\nmsg.query = {\n    device: camera\n}\n\nmsg.payload.device = camera;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            [
                "7648c48d65a81c5e"
            ]
        ]
    },
    {
        "id": "6b0fce6cc62972d3",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Find Merge",
        "func": "var camera = flow.get(\"camera\");\nif(!camera || camera.length < 5)\n    return;\nmsg.payload = {\n    device: camera\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 420,
        "wires": [
            [
                "bb9e22063748b12a"
            ]
        ]
    },
    {
        "id": "bb9e22063748b12a",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "merge_area",
        "operation": "find",
        "x": 720,
        "y": 420,
        "wires": [
            [
                "b15cd2f0cebdb49f"
            ]
        ]
    },
    {
        "id": "b15cd2f0cebdb49f",
        "type": "switch",
        "z": "613bd474aa619f30",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 420,
        "wires": [
            [
                "8b32d2b9a10a177d"
            ],
            [
                "4a6154fbdb6ef939"
            ]
        ]
    },
    {
        "id": "8b32d2b9a10a177d",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "new mergearea",
        "func": "msg.topic = \"mergearea\"\nmsg.payload = {\n    x1: 100,\n    y1: 100,\n    x2: 200,\n    y2: 200\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "6026c5c16c212e84"
            ]
        ]
    },
    {
        "id": "6026c5c16c212e84",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "697f7acf2f6fa429"
        ],
        "x": 1345,
        "y": 420,
        "wires": []
    },
    {
        "id": "4a6154fbdb6ef939",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "device mergearea",
        "func": "msg.topic = \"mergearea\"\nmsg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "6026c5c16c212e84"
            ]
        ]
    },
    {
        "id": "7648c48d65a81c5e",
        "type": "mongodb out",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "merge_area",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e20b86f080d034d",
        "type": "ui_button",
        "z": "613bd474aa619f30",
        "name": "",
        "group": "fe0c44dbc0f0af9e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Add / Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 420,
        "wires": [
            [
                "6b0fce6cc62972d3"
            ]
        ]
    },
    {
        "id": "f04b1363efab9c8b",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Filter birth or death",
        "func": "var list = [];\nvar mergearea = flow.get(\"mergearea\");\nif(!mergearea)\n    return;\n\nmsg.payload.forEach(function(detection){\n    var first = detection.path[0];\n    var birth = false;\n    if( first.x > mergearea.x1 && first.x < mergearea.x2 && first.y > mergearea.y1 &&  first.y < mergearea.y2 )\n        list.push(detection);\n});\nmsg.topic = \"objectpaths\";\nmsg.payload = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 680,
        "wires": [
            [
                "de1ecb8112fe1496"
            ]
        ]
    },
    {
        "id": "de1ecb8112fe1496",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "697f7acf2f6fa429"
        ],
        "x": 1195,
        "y": 680,
        "wires": []
    },
    {
        "id": "5b66d5bb3c83f8c0",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "a602c957a77ba382"
        ],
        "x": 405,
        "y": 560,
        "wires": []
    },
    {
        "id": "4db43fa50784eccc",
        "type": "inject",
        "z": "613bd474aa619f30",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1170,
        "y": 80,
        "wires": [
            [
                "c6300b0d74707e13"
            ]
        ]
    },
    {
        "id": "c6300b0d74707e13",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "merge_area",
        "operation": "aggregate",
        "x": 1430,
        "y": 80,
        "wires": [
            [
                "e8ee3ea5431f1151"
            ]
        ]
    },
    {
        "id": "68230220efe83640",
        "type": "debug",
        "z": "613bd474aa619f30",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 80,
        "wires": []
    },
    {
        "id": "e8ee3ea5431f1151",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "",
        "func": "var merge = {};\nmsg.payload.forEach(function(item){\n    item.deaths = [];\n    merge[item.device] = item;\n});\n\nflow.set(\"merge\",merge);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 80,
        "wires": [
            [
                "68230220efe83640"
            ]
        ]
    },
    {
        "id": "c60588937a86b320",
        "type": "mqtt in",
        "z": "613bd474aa619f30",
        "name": "",
        "topic": "objectpath/detection/#",
        "qos": "2",
        "datatype": "json",
        "broker": "260e45057b94b302",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "eabde4fcc9b76a42",
                "3eb379fbd1068561"
            ]
        ]
    },
    {
        "id": "eabde4fcc9b76a42",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Birth in merge area",
        "func": "var merge = flow.get(\"merge\");\n\nif(!merge)\n    return;\n\nif(!merge.hasOwnProperty(msg.payload.device))\n    return;\n\nvar first = msg.payload.path[0];\n\nvar mergearea = merge[msg.payload.device];\n\nif( first.x > mergearea.x1 && first.x < mergearea.x2 && first.y > mergearea.y1 && first.y < mergearea.y2 )\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 100,
        "wires": [
            [
                "15a6af074b0a46b2"
            ]
        ]
    },
    {
        "id": "15a6af074b0a46b2",
        "type": "debug",
        "z": "613bd474aa619f30",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 60,
        "wires": []
    },
    {
        "id": "3eb379fbd1068561",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Death in merge area",
        "func": "var merge = flow.get(\"merge\");\n\nif(!merge)\n    return;\n\nif(!merge.hasOwnProperty(msg.payload.device))\n    return;\n\nvar last = msg.payload.path[msg.payload.path.length - 1];\n\nvar mergearea = merge[msg.payload.device];\n\nif( last.x > mergearea.x1 && last.x < mergearea.x2 && last.y > mergearea.y1 && last.y < mergearea.y2 )\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 140,
        "wires": [
            [
                "fec1023081b09a21"
            ]
        ]
    },
    {
        "id": "608c70398e1b054b",
        "type": "debug",
        "z": "613bd474aa619f30",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 140,
        "wires": []
    },
    {
        "id": "fec1023081b09a21",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Deaths",
        "func": "var deaths = flow.get(\"deaths\") || [];\ndeaths.push(msg.payload);\nflow.set(\"deaths\",deaths);\nmsg.payload = deaths;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 140,
        "wires": [
            [
                "608c70398e1b054b"
            ]
        ]
    },
    {
        "id": "fc14b53102b7fb35",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Get objectpaths today",
        "func": "var camera = flow.get(\"camera\");\nif(!camera || camera.length < 5 )\n    return;\n\nvar today = new Date();\ntoday.setHours(0);\ntoday.setMinutes(0);\n\n\nmsg.payload = {\n    device: camera,\n    timestamp: {\n        $gte: today.getTime()\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 720,
        "wires": [
            [
                "9eac776fc6b8615c"
            ]
        ]
    },
    {
        "id": "9eac776fc6b8615c",
        "type": "mongodb in",
        "z": "613bd474aa619f30",
        "mongodb": "b12a9cc543227135",
        "name": "",
        "collection": "objectpath",
        "operation": "find",
        "x": 760,
        "y": 720,
        "wires": [
            [
                "e190b0683e0ac66f"
            ]
        ]
    },
    {
        "id": "368e626b635127c1",
        "type": "ui_button",
        "z": "613bd474aa619f30",
        "name": "Review deaths",
        "group": "fe0c44dbc0f0af9e",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Review deaths",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "fc14b53102b7fb35"
            ]
        ]
    },
    {
        "id": "e190b0683e0ac66f",
        "type": "function",
        "z": "613bd474aa619f30",
        "name": "Filter birth or death",
        "func": "var list = [];\nvar mergearea = flow.get(\"mergearea\");\nif(!mergearea)\n    return;\n\nmsg.payload.forEach(function(detection){\n    var last = detection.path[detection.path.length-1];\n    if( last.x > mergearea.x1 && last.x < mergearea.x2 && last.y > mergearea.y1 &&  last.y < mergearea.y2 )\n        list.push(detection);\n});\nmsg.topic = \"objectpaths\";\nmsg.payload = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "d66a7c0b50350c28"
            ]
        ]
    },
    {
        "id": "d66a7c0b50350c28",
        "type": "link out",
        "z": "613bd474aa619f30",
        "name": "",
        "mode": "link",
        "links": [
            "697f7acf2f6fa429"
        ],
        "x": 1195,
        "y": 720,
        "wires": []
    }
]